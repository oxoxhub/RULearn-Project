
/*
 *  계정 샘플
 *  AC_ID : best1234
 *  AC_PW : 1234
 *  AC_NAME : 베스트
 *  AC_NICKNAME : 베스트1234
 *  ac_phone : 010-1234-5678
 *  AC_EMAIL : best1234@email.com
 *  AC_ROLE : 일반 -> 숫자?
 *  AC_DATE : SYSDATE
 */

CREATE TABLE ACCOUNT (
AC_ID VARCHAR2(50) PRIMARY KEY
, AC_PW VARCHAR2(50) NOT NULL
, AC_PW_ORIGIN VARCHAR2(50)
, AC_NAME VARCHAR2(20) NOT NULL
, AC_NICKNAME VARCHAR2(20) NOT NULL UNIQUE
, AC_PHONE VARCHAR2(30) NOT NULL
, AC_EMAIL VARCHAR2(100) NOT NULL UNIQUE
, AC_ROLE NUMBER
, AC_DATE DATE DEFAULT(SYSDATE)
, CONSTRAINT ACCOUNT_AC_ROLE_FK FOREIGN KEY(AC_ROLE) REFERENCES ROLES(RO_ID)
);

INSERT INTO ACCOUNT(AC_ID, AC_PW, AC_NAME, AC_NICKNAME, AC_PHONE, AC_EMAIL, AC_ROLE, AC_DATE)
VALUES('best1234',
		'1234',
		'베스트',
		'베스트1234' -- NICKNAME		
		, '010-1234-5678', 'best1234@email.com', 1, SYSDATE);

(*role이름 변경 필요
데이터 타입 변경 필요)

-- ACCOUNT 테이블 컬럼 추가(2022.09.06 추가 / 회원 가입 구분 - 일반회원, 카카오 연동 회원...)
ALTER TABLE ACCOUNT ADD AC_GROUP NUMBER CONSTRAINT ACCOUNT_AC_GROUP_FK REFERENCES ACCOUNT_GROUP(ACG_ID);

-- ACCOUNT 테이블 컬럼 추가(2022.09.19 추가 / 회원메일인증관련)
ALTER TABLE ACCOUNT ADD AC_MAIL_AUTH NUMBER DEFAULT(0);
ALTER TABLE ACCOUNT ADD AC_MAIL_KEY VARCHAR2(50);
--

-- ACCOUNT 테이블 컬럼 추가(2022.09.20 추가 / 비밀번호 구분)
ALTER TABLE ACCOUNT ADD AC_PW_ORIGIN VARCHAR2(50);

-- ACCOUNT 테이블 관리자 ID 추가(2022.09.23)
INSERT INTO ACCOUNT(AC_ID, AC_PW, AC_NAME, AC_NICKNAME, AC_PHONE, AC_EMAIL, AC_ROLE, AC_DATE, AC_GROUP, AC_MAIL_AUTH)
     VALUES('Admin', 'test1234%', '홍길동', '관리자', '010-1234-5678', 'rulearn@relearn.com', 3, SYSDATE, 1, 1);
-----


-- 회원구분(2022.09.06 추가)
CREATE TABLE ACCOUNT_GROUP (
       ACG_ID NUMBER PRIMARY KEY
     , ACG_NAME VARCHAR2(30) NOT NULL UNIQUE
);

CREATE SEQUENCE ACCOUNT_GROUP_SEQ NOCACHE;

INSERT INTO ACCOUNT_GROUP
     VALUES(ACCOUNT_GROUP_SEQ.NEXTVAL, '일반회원');
    
INSERT INTO ACCOUNT_GROUP
     VALUES(ACCOUNT_GROUP_SEQ.NEXTVAL, '카카오회원');

-- 회원구분명수정(2022.09.23)
UPDATE ACCOUNT_GROUP SET ACG_NAME = '일반로그인' WHERE ACG_ID = 1;
UPDATE ACCOUNT_GROUP SET ACG_NAME = '카카오로그인' WHERE ACG_ID = 2;
------         
  
SELECT * FROM ACCOUNT_GROUP;


CREATE TABLE ROLES (
RO_ID NUMBER PRIMARY KEY
, RO_NAME VARCHAR2(30) NOT NULL UNIQUE
);

CREATE SEQUENCE ROLES_SEQ NOCACHE;

INSERT INTO ROLES
VALUES(ROLES_SEQ.NEXTVAL, '일반')

-- ROLES 데이터 수정 및 추가(2022.09.23)
UPDATE ROLES SET RO_NAME = '일반회원' WHERE RO_ID = 1;

INSERT INTO ROLES
     VALUES(ROLES_SEQ.NEXTVAL, '강사');
    
INSERT INTO ROLES
     VALUES(ROLES_SEQ.NEXTVAL, '관리자');
----


SELECT * FROM ROLES;
SELECT * FROM ACCOUNT;

--

-- 약관
CREATE TABLE TERM (
	T_ID NUMBER PRIMARY KEY
	, T_TITLE VARCHAR2(50)
	, T_CONTEXT VARCHAR2(4000)
	, T_REQUIRED VARCHAR2(1) CHECK(T_REQUIRED IN ('Y', 'N'))
);

CREATE SEQUENCE TERM_SEQ NOCACHE;

INSERT INTO TERM
VALUES(TERM_SEQ.NEXTVAL, '개인정보처리방침', 'N')

-- TERM테이블 데이터 수정 및 추가(2022.09.19 추가)
UPDATE TERM
   SET T_TITLE = '홈페이지이용약관'
     , T_CONTEXT = '홈페이지 이용약관'
     , T_REQUIRED = 'Y'
 WHERE T_ID = 1;

INSERT INTO TERM 
     VALUES(TERM_SEQ.NEXTVAL
         , '개인정보처리방침'
         , '개인정보처리방침'
         , 'Y');
--

-- TERM테이블 T_CONTEXT 컬럼 삭제(2022.09.24)
ALTER TABLE TERM DROP COLUMN T_CONTEXT;
------
         
SELECT * FROM TERM;

CREATE TABLE AGREEMENT (
AG_ID NUMBER PRIMARY KEY
, AG_ACID VARCHAR2(50)
, AG_TID NUMBER
, AG_ISAGREE VARCHAR2(1) DEFAULT('N')
, CONSTRAINT AGREEMENT_AG_ACID_FK FOREIGN KEY(AG_ACID) REFERENCES ACCOUNT(AC_ID) ON DELETE CASCADE
, CONSTRAINT AGREEMENT_AG_TID_FK FOREIGN KEY(AG_TID) REFERENCES TERM(T_ID)
);

CREATE SEQUENCE AGREEMENT_SEQ NOCACHE;

INSERT INTO AGREEMENT
VALUES(AGREEMENT_SEQ.NEXTVAL, 'best1234', 1, 'N');

-- 회원탈퇴(삭제)시 발생하는 문제로 FK키 속성 추가(2022.09.24)
ALTER TABLE AGREEMENT DROP CONSTRAINT AGREEMENT_AG_ACID_FK;

ALTER TABLE AGREEMENT ADD CONSTRAINT AGREEMENT_AG_ACID_FK FOREIGN KEY(AG_ACID) REFERENCES ACCOUNT(AC_ID) ON DELETE CASCADE;
---------

SELECT * FROM AGREEMENT;

--

-- CATEGORY 테이블
CREATE TABLE CATEGORY(
CAT_ID NUMBER CONSTRAINT CATEGORY_CAT_ID_PK PRIMARY KEY
, CAT_NAME VARCHAR2(50) UNIQUE NOT NULL
);

CREATE SEQUENCE CATEGORY_SEQ NOCACHE;


-- CATEGORY 테이블 샘플 데이터
INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, 'Q&A');

INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, '고민자유');

INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, '노하우팁');

INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, '스터디');

INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, '프로젝트');

INSERT INTO CATEGORY(CAT_ID, CAT_NAME)
VALUES(CATEGORY_SEQ.NEXTVAL
, '강의');

SELECT * FROM CATEGORY;

--

CREATE TABLE COMMUNITY_BOARD (
CB_BID NUMBER,
CB_WID VARCHAR2(50) NOT NULL,
CB_CATID NUMBER NOT NULL,
CB_TITLE VARCHAR2(100) NOT NULL,
CB_CONTENT VARCHAR2(4000) NOT NULL,
CB_LIKE NUMBER,
CB_DATE DATE DEFAULT(SYSDATE),
CONSTRAINT COMMUNITY_BOARD_CB_BID_PK PRIMARY KEY (CB_BID),
CONSTRAINT COMMUNITY_BOARD_CB_WID_FK FOREIGN KEY (CB_WID) REFERENCES ACCOUNT(AC_ID),
CONSTRAINT COMMUNITY_BOARD_CB_CATID_FK FOREIGN KEY (CB_CATID) REFERENCES CATEGORY(CAT_ID)
);

CREATE SEQUENCE COMMUNITY_BOARD_SEQ NOCACHE;

INSERT INTO COMMUNITY_BOARD
VALUES (COMMUNITY_BOARD_SEQ.NEXTVAL, 'best1234', 1, 'COMMUNITY-BOARD-TEST', 'TESTTEST', 0, SYSDATE);

SELECT * FROM COMMUNITY_BOARD;

--

CREATE TABLE COMMUNITY_BOARD_STATICS (
CBS_ID NUMBER,
CBS_WID VARCHAR2(50) NOT NULL,
CBS_BID NUMBER NOT NULL,
CBS_LIKED VARCHAR2(1) NOT NULL CHECK(CBS_LIKED IN('Y','N')),
CONSTRAINT COMMUNITY_BOARD_STATICS_CBS_ID_PK PRIMARY KEY (CBS_ID),
CONSTRAINT COMMUNITY_BOARD_STATICS_CBS_WID_FK FOREIGN KEY (CBS_WID) REFERENCES ACCOUNT(AC_ID), 
CONSTRAINT COMMUNITY_BOARD_STATICS_CBS_BID_FK FOREIGN KEY (CBS_BID) REFERENCES COMMUNITY_BOARD(CB_BID) ON DELETE CASCADE
);

CREATE SEQUENCE COMMUNITY_BOARD_STATICS_SEQ NOCACHE;

-- 2022년 9월 19일 DB 속성변경
-- 게시판에 이미 댓글이 달려 있으면 무결성 제약조건 위배로 게시판 삭제가 안되는 문제(게시판 추천, 댓글 추천도 동일)
-- DB 외래키 제약조건으로 인하여 외래키 속성 추가
ALTER TABLE COMMUNITY_BOARD_STATICS DROP CONSTRAINT  "COMMUNITY_BOARD_STATICS_CBS_BID_FK";

ALTER TABLE COMMUNITY_BOARD_STATICS ADD CONSTRAINT COMMUNITY_BOARD_STATICS_CBS_BID_FK FOREIGN KEY (CBS_BID) REFERENCES COMMUNITY_BOARD(CB_BID) ON DELETE CASCADE;
--

INSERT INTO COMMUNITY_BOARD_STATICS
VALUES (COMMUNITY_BOARD_STATICS_SEQ.NEXTVAL, 'best1234', 1, 'N');

SELECT * FROM COMMUNITY_BOARD_STATICS;

--


-- 학습 게시판
CREATE TABLE STUDY_BOARD (
	SB_BID 		NUMBER,
	SB_WID 		VARCHAR2(50) 	NOT NULL,
	SB_CATID 	NUMBER		 	NOT NULL,
	SB_TITLE 	VARCHAR2(100) 	NOT NULL,
	SB_CONTENT 	VARCHAR2(4000) 	NOT NULL,
	SB_LIKE 	NUMBER,
	SB_ISDONE 	VARCHAR2(1) 	CHECK(SB_ISDONE IN('Y', 'N')),
	SB_DATE 	DATE,
	CONSTRAINT SB_BID_PK PRIMARY KEY (SB_BID),
	CONSTRAINT SB_WID_FK FOREIGN KEY (SB_WID) REFERENCES ACCOUNT(AC_ID),
	CONSTRAINT SB_CATID_FK FOREIGN KEY (SB_CATID) REFERENCES CATEGORY(CAT_ID)
);

CREATE SEQUENCE STUDY_BOARD_SEQ NOCACHE;

-- STUDY_BOARD SAMPLE DATA
INSERT 	INTO STUDY_BOARD 
		VALUES(STUDY_BOARD_SEQ.NEXTVAL, -- 게시물id(자동생성)
				'best1234',  			-- 작성자 id(계정 외래키)
				4,						-- 카테고리 분류(카테고리 외래키)
				'TEST_TITLE',			-- 글제목
				'TEST_CONTENT',			-- 내용
				0,						-- 추천수(초기상태 0)
				'Y',					-- 모집중/완료 확인
				SYSDATE					-- 작성일
);

SELECT * FROM STUDY_BOARD;

	
-- 학습 게시판 추천 정보
CREATE TABLE STUDY_BOARD_STATICS(
	SBS_ID 		NUMBER,
	SBS_WID 	VARCHAR2(50) 	NOT NULL,
	SBS_BID 	NUMBER 			NOT NULL,
	SBS_LIKED 	VARCHAR2(1) 	CHECK(SBS_LIKED IN('Y', 'N')) 	NOT NULL,
	CONSTRAINT SBS_ID_PK PRIMARY KEY (SBS_ID),
	CONSTRAINT SBS_WID_FK FOREIGN KEY (SBS_WID) REFERENCES ACCOUNT(AC_ID),
	CONSTRAINT SBS_BID_FK FOREIGN KEY (SBS_BID) REFERENCES STUDY_BOARD(SB_BID) ON DELETE CASCADE
);

--09.22 외래키 속성 추가--
ALTER TABLE STUDY_BOARD_STATICS DROP CONSTRAINT "SBS_BID_FK";
ALTER TABLE STUDY_BOARD_STATICS ADD CONSTRAINT SBS_BID_FK FOREIGN KEY (SBS_BID) REFERENCES STUDY_BOARD(SB_BID) ON DELETE CASCADE;
--

CREATE SEQUENCE STUDY_BOARD_STATICS_SEQ NOCACHE;

-- STUDY_BOARD_STATICS SAMPLE DATA
INSERT 	INTO STUDY_BOARD_STATICS
		VALUES(STUDY_BOARD_STATICS_SEQ.NEXTVAL, -- 식별자 자동생성
				'best1234', 					-- 작성자 id(계정 외래키)
				1,								-- 학습 게시물id(학습 게시판 id 외래키)
				'N'								-- 추천 여부 확인
);

SELECT * FROM STUDY_BOARD_STATICS;
--

CREATE TABLE COMMUNITY_COMMENT (
	CC_ID NUMBER,
	CC_WID VARCHAR2(50),
	CC_BID NUMBER,
	CC_GID NUMBER,
	CC_SORT NUMBER,
	CC_DEPTH NUMBER,
	CC_CHILD NUMBER,
	CC_PARENTS NUMBER,
	CC_CONTENT VARCHAR2(4000) NOT NULL,
	CC_DELETED VARCHAR2(1) CHECK(CC_DELETED  IN ('Y','N')),
	CC_LIKE NUMBER,
	CC_DATE DATE DEFAULT(SYSDATE),
	CONSTRAINT COMMUNITY_COMMENT_CC_ID_PK PRIMARY KEY (CC_ID),
	CONSTRAINT COMMUNITY_COMMENT_CC_WID_FK FOREIGN KEY (CC_WID) REFERENCES ACCOUNT(AC_ID),
	CONSTRAINT COMMUNITY_COMMENT_CC_BID_FK FOREIGN KEY (CC_BID) REFERENCES COMMUNITY_BOARD(CB_BID) ON DELETE CASCADE
);


CREATE SEQUENCE COMMUNITY_COMMENT_SEQ NOCACHE;

-- 2022년 9월 19일 DB 속성변경
-- 게시판에 이미 댓글이 달려 있으면 무결성 제약조건 위배로 게시판 삭제가 안되는 문제(게시판 추천, 댓글 추천도 동일)
-- DB 외래키 제약조건으로 인하여 외래키 속성 추가
ALTER TABLE COMMUNITY_COMMENT DROP CONSTRAINT  "COMMUNITY_COMMENT_CC_BID_FK";

ALTER TABLE COMMUNITY_COMMENT ADD CONSTRAINT COMMUNITY_COMMENT_CC_BID_FK FOREIGN KEY (CC_BID) REFERENCES COMMUNITY_BOARD(CB_BID)
ON DELETE CASCADE;

-- 2022년 9월 20일 댓글 컬럼 추가(대댓글 용도)
ALTER TABLE COMMUNITY_COMMENT ADD CC_CHILD NUMBER;
ALTER TABLE COMMUNITY_COMMENT ADD CC_PARENTS NUMBER;
--

--------

INSERT INTO COMMUNITY_COMMENT
VALUES (COMMUNITY_COMMENT_SEQ.NEXTVAL, 'best1234', 1, 1, 1, 1, 'COMMUNITY-COMMENT-TEST', 'N', 0, SYSDATE);

SELECT  * FROM COMMUNITY_COMMENT;

CREATE TABLE COMMUNITY_COMMENT_STATICS (
CCS_ID NUMBER,
CCS_WID VARCHAR2(50) NOT NULL,
CCS_CID NUMBER NOT NULL,
CCS_LIKED VARCHAR2(1) NOT NULL CHECK(CCS_LIKED IN('Y', 'N')),
CONSTRAINT COMMUNITY_COMMENT_STATICS_CCS_ID_PK PRIMARY KEY (CCS_ID),
CONSTRAINT COMMUNITY_COMMENT_STATICS_CCS_WID_FK FOREIGN KEY (CCS_WID) REFERENCES ACCOUNT(AC_ID),
CONSTRAINT COMMUNITY_COMMENT_STATICS_CCS_CID_FK FOREIGN KEY (CCS_CID) REFERENCES COMMUNITY_COMMENT(CC_ID) ON DELETE CASCADE
);

CREATE SEQUENCE COMMUNITY_COMMENT_STATICS_SEQ NOCACHE;

INSERT INTO COMMUNITY_COMMENT_STATICS
VALUES (COMMUNITY_COMMENT_STATICS_SEQ.NEXTVAL, 'best1234', 1, 'N');

SELECT * FROM COMMUNITY_COMMENT_STATICS;

-- 2022년 9월 19일 DB 속성변경
-- DB 외래키 제약조건으로 인하여 외래키 속성 추가
ALTER TABLE COMMUNITY_COMMENT_STATICS DROP CONSTRAINT  "COMMUNITY_COMMENT_STATICS_CCS_CID_FK";

ALTER TABLE COMMUNITY_COMMENT_STATICS ADD CONSTRAINT COMMUNITY_COMMENT_STATICS_CCS_CID_FK FOREIGN KEY (CCS_CID) REFERENCES COMMUNITY_COMMENT(CC_ID) ON DELETE CASCADE;

--	


-- 학습 댓글 게시판
-- 9월 13일 sql 수정
--DROP TABLE STUDY_COMMENT;

CREATE TABLE STUDY_COMMENT(
	 SC_ID 			NUMBER								-- 댓글 id(자동생성)
	,SC_WID 		VARCHAR2(50)						-- 댓글 작성자 id(계정 외래키)
	,SC_BID 		NUMBER								-- 학습 게시물 id(학습 게시판 id 외래키)
	,SC_GID 		NUMBER								-- SC_GID 계층형 댓글 그룹
	,SC_SORT		NUMBER								-- SC_SORT 계층형 댓글 정렬
	,SC_DEPTH 		NUMBER								-- SC_DEPTH 계층형 댓글 깊이
	,SC_CHILD 		NUMBER								-- SC_CHILD 자식 댓글의 개수
	,SC_PARENTS		NUMBER								-- SC_PARENTS 부모 댓글 ID
	,SC_CONTENT 	VARCHAR2(4000)	NOT NULL			-- 댓글 내용
	,SC_DELETED 	VARCHAR2(1) 	CHECK(SC_DELETED IN('Y', 'N'))	-- 댓글 삭제 여부
	,SC_LIKE 		NUMBER 								-- 댓글 추천수
	,SC_DATE 		DATE 			DEFAULT(SYSDATE)	-- 댓글 작성일
	,CONSTRAINT SC_ID_PK 	PRIMARY KEY (SC_ID)
	,CONSTRAINT SC_WID_FK 	FOREIGN KEY (SC_WID) REFERENCES ACCOUNT(AC_ID)
	,CONSTRAINT SC_BID_FK 	FOREIGN KEY (SC_BID) REFERENCES STUDY_BOARD(SB_BID) ON DELETE CASCADE
);

--09.22 외래키 속성 추가--
ALTER TABLE STUDY_COMMENT DROP CONSTRAINT "SC_BID_FK";
ALTER TABLE STUDY_COMMENT ADD CONSTRAINT SC_BID_FK FOREIGN KEY (SC_BID) REFERENCES STUDY_BOARD(SB_BID) ON DELETE CASCADE;
--

-- 9월 13일 sql 수정
--DROP SEQUENCE STUDY_COMMENT_SEQ;
CREATE SEQUENCE STUDY_COMMENT_SEQ NOCACHE;

-- STUDY_COMMENT SAMPLE DATA
INSERT 	INTO STUDY_COMMENT
		VALUES(STUDY_COMMENT_SEQ.NEXTVAL,	-- 댓글 id(자동생성)
				'best1234' 					-- 댓글 작성자 id(계정 외래키)
				,1							-- 학습 게시물 id(학습 게시판 id 외래키)
				,1		 					-- SC_GID 계층형 댓글 그룹
				,0 							-- SC_SORT 계층형 댓글 정렬
				,0 							-- SC_DEPTH 계층형 댓글 깊이
				,0							-- SC_CHILD 자식 댓글 개수
				,0							-- SC_PARENTS 부모 댓글 ID
				,'1번째 기본댓글' 			-- 댓글 내용
				,'N'						-- 댓글 삭제 여부
				,0							-- 댓글 추천수
				,SYSDATE					-- 댓글 작성일
			);
		
SELECT * FROM STUDY_COMMENT;
		
-- 학습 댓글 추천정보
-- 9월 13일 sql 수정
--DROP TABLE STUDY_COMMENT_STATICS;

CREATE TABLE STUDY_COMMENT_STATICS(
	SCS_ID 		NUMBER,
	SCS_WID 	VARCHAR2(50) 	NOT NULL,
	SCS_CID 	NUMBER 			NOT NULL,
	SCS_LIKED 	VARCHAR2(1) 	CHECK(SCS_LIKED IN('Y', 'N')) NOT NULL,
	CONSTRAINT SCS_ID_PK PRIMARY KEY (SCS_ID),
	CONSTRAINT SCS_WID_FK FOREIGN KEY (SCS_WID) REFERENCES ACCOUNT(AC_ID),
	CONSTRAINT SCS_CID_FK FOREIGN KEY (SCS_CID) REFERENCES STUDY_COMMENT(SC_ID) ON DELETE CASCADE
);

--09.22 외래키 속성 추가--
ALTER TABLE STUDY_COMMENT_STATICS DROP CONSTRAINT  "SCS_CID_FK";
ALTER TABLE STUDY_COMMENT_STATICS ADD CONSTRAINT SCS_CID_FK FOREIGN KEY (SCS_CID) REFERENCES STUDY_COMMENT(SC_ID) ON DELETE CASCADE;
--

-- 9월 13일 sql 수정
--DROP SEQUENCE STUDY_COMMENT_STATICS_SEQ;
CREATE SEQUENCE STUDY_COMMENT_STATICS_SEQ NOCACHE;

-- STUDY_COMMENT_STATICS SAMPLE DATA
INSERT 	INTO STUDY_COMMENT_STATICS
		VALUES(STUDY_COMMENT_STATICS_SEQ.NEXTVAL, -- 식별자(자동생성)
				'best1234',	-- 작성자 id(계정 외래키)
				1,		-- 학습 댓글 id(학습 댓글 id 외래키)
				'N'			-- 추천여부 확인
);

SELECT * FROM STUDY_COMMENT_STATICS;

--



-- LESSON 테이블
CREATE TABLE LESSON(
L_ID NUMBER CONSTRAINT LESSON_L_ID_PK PRIMARY KEY
, L_CATID NUMBER CONSTRAINT LESSON_L_CATID_FK REFERENCES CATEGORY(CAT_ID)
, L_WID VARCHAR2(50) CONSTRAINT LESSON_L_WID_FK REFERENCES ACCOUNT(AC_ID)
, L_TITLE VARCHAR2(200) NOT NULL
, L_CONTENT VARCHAR2(4000) NOT NULL
, L_PRICE NUMBER NOT NULL
);

CREATE SEQUENCE LESSON_SEQ NOCACHE;

-- LESSON 테이블 샘플 데이터
INSERT INTO LESSON(L_ID, L_CATID, L_WID, L_TITLE, L_CONTENT, L_PRICE)
VALUES(LESSON_SEQ.NEXTVAL
, 6
, 'best1234'
, '강의test'
, '강의test입니다'
, 99000);

SELECT * FROM LESSON;

-- LESSON_MANAGER 테이블
CREATE TABLE LESSON_MANAGER(
LM_ID NUMBER CONSTRAINT LESSON_MANAGER_LM_ID_PK PRIMARY KEY
, LM_LID NUMBER CONSTRAINT LESSON_MANAGER_LM_LID_FK REFERENCES LESSON(L_ID)
, LM_WID VARCHAR2(50) CONSTRAINT LESSON_MANAGER_LM_WID_FK REFERENCES ACCOUNT(AC_ID)
, LM_DATE DATE
);

CREATE SEQUENCE LESSON_MANAGER_SEQ NOCACHE;

-- LESSON_MANAGER 테이블 샘플 데이터
INSERT INTO LESSON_MANAGER(LM_ID, LM_LID, LM_WID, LM_DATE)
VALUES(LESSON_MANAGER_SEQ.NEXTVAL
, 1
, 'best1234'
, SYSDATE);

SELECT * FROM LESSON_MANAGER;

-- LESSON_UPLOAD 테이블
CREATE TABLE LESSON_UPLOAD(
LU_ID NUMBER CONSTRAINT LESSON_UPLOAD_LU_ID_PK PRIMARY KEY
, LU_BID NUMBER CONSTRAINT LESSON_UPLOAD_LU_BID_FK REFERENCES LESSON(L_ID)
, LU_NAME VARCHAR2(200) NOT NULL
, LU_UUIDNAME VARCHAR2(36) NOT NULL
, LU_LOCATION VARCHAR2(500) NOT NULL
, LU_URL VARCHAR2(500) NOT NULL
, LU_FILESIZE NUMBER DEFAULT(0)
, LU_CONTENTTYPE VARCHAR2(50) NOT NULL
)

CREATE SEQUENCE LESSON_UPLOAD_SEQ NOCACHE;

-- LESSON_UPLOAD 테이블은 샘플 데이터 넣기가 애매한거 같아서 일단은 뺐습니다.

--
CREATE TABLE REVIEW_BOARD(
RB_ID NUMBER,
RB_WID VARCHAR2(50) NOT NULL,
RB_LID NUMBER NOT NUll,
RB_CONTENT VARCHAR2(4000),
RB_SCORE NUMBER DEFAULT(1),
RB_DATE DATE DEFAULT(SYSDATE),
CONSTRAINT REVIEW_BOARD_RB_ID_PK PRIMARY KEY(RB_ID),
CONSTRAINT REVIEW_BOARD_RB_WID_FK FOREIGN KEY(RB_WID) REFERENCES ACCOUNT(AC_ID),
CONSTRAINT REVIEW_BOARD_RB_LID_FK FOREIGN KEY(RB_LID) REFERENCES LESSON(L_ID)
);

CREATE SEQUENCE REVIEW_BOARD_SEQ NOCACHE;

INSERT INTO REVIEW_BOARD
VALUES(REVIEW_BOARD_SEQ.NEXTVAL, 'best1234', 1, '감동적인 수업이었습니다.', 5, SYSDATE);

SELECT * FROM REVIEW_BOARD;

/**

작성자: 최다연
*/
CREATE TABLE QA_BOARD(
QB_BID NUMBER,
QB_WID VARCHAR2(50) NOT NULL,
QB_LID NUMBER NOT NUll,
QB_TITLE VARCHAR2(100) NOT NULL,
QB_CONTENT VARCHAR2(4000) NOT NULL,
QB_DATE DATE DEFAULT(SYSDATE),
CONSTRAINT QA_BOARD_QB_BID_PK PRIMARY KEY(QB_BID),
CONSTRAINT QA_BOARD_QB_WID_FK FOREIGN KEY(QB_WID) REFERENCES ACCOUNT(AC_ID),
CONSTRAINT QA_BOARD_QB_LID_FK FOREIGN KEY(QB_LID) REFERENCES LESSON(L_ID)
);

CREATE SEQUENCE QA_BOARD_SEQ NOCACHE;

INSERT INTO QA_BOARD
VALUES(QA_BOARD_SEQ.NEXTVAL, 'best1234', 1, '커리큘럼에 관해서', 'spring aop에 관한 구체적인 설명이 담겨있는 강좌를 추가로 찍으실 생각 없으신가요?', SYSDATE);

SELECT * FROM QA_BOARD;
/**

작성자: 최다연
*/
CREATE TABLE QA_ANSWER(
QAA_ID NUMBER NOT NULL,
QAA_WID VARCHAR2(50),
QAA_BID NUMBER,
QAA_CONTENT VARCHAR2(4000) NOT NULL,
QAA_DATE DATE DEFAULT(SYSDATE),
CONSTRAINT QA_ANSWER_QAA_ID_PK PRIMARY KEY(QAA_ID),
CONSTRAINT QA_ANSWER_QAA_WID_FK FOREIGN KEY(QAA_WID) REFERENCES ACCOUNT(AC_ID),
CONSTRAINT QA_ANSWER_QAA_BID_FK FOREIGN KEY(QAA_BID) REFERENCES QA_BOARD(QB_BID)
);

CREATE SEQUENCE QA_ANSWER_SEQ NOCACHE;

INSERT INTO QA_ANSWER
VALUES(QA_ANSWER_SEQ.NEXTVAL, 'best1234', 1, '아직은 없지만 한번 생각해보겠습니다.', SYSDATE);

SELECT * FROM QA_ANSWER;

--

CREATE TABLE WISHLIST (
W_ID NUMBER PRIMARY KEY
, W_ACID VARCHAR2(50)
, W_LID NUMBER
, CONSTRAINT WISHLIST_W_ACID_FK FOREIGN KEY(W_ACID) REFERENCES ACCOUNT(AC_ID)
, CONSTRAINT WISHLIST_W_LID_FK FOREIGN KEY(W_LID) REFERENCES LESSON(L_ID)
);

CREATE SEQUENCE WISHLIST_SEQ NOCACHE;

INSERT INTO WISHLIST
VALUES(WISHLIST_SEQ.NEXTVAL, 'best1234', 1);

SELECT * FROM  WISHLIST;

CREATE TABLE PAYMENT (
P_TID VARCHAR2(50) PRIMARY KEY
, P_ACID VARCHAR2(50)
, P_ITEM_NAME VARCHAR2(100)
, P_ITEM_CODE VARCHAR2(100)
, P_TOTAL_AMOUNT NUMBER
, P_APPROVED_AT DATE
, CONSTRAINT PAYMENT_P_ACID_FK FOREIGN KEY(P_ACID) REFERENCES ACCOUNT(AC_ID)
);



